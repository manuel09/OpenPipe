name: Release

on:
  workflow_dispatch:
    inputs:
      title:
        type: string
        description: 'Title'
        required: true
        default: 'v0.00.0 R0'
      is_pre_release:
        type: boolean
        description: 'Set as a pre-release'
        required: true
        default: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    permissions: write-all

    steps:
      - name: Checkout branch "${{ github.ref_name }}"
        run: |
          git clone --no-checkout https://github.com/manuel09/OpenPipe.git .
          git checkout --progress --force ${{ github.ref_name }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Decode keystore and sign APK
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          ANDROID_HOME: /usr/local/lib/android/sdk  # se il path Ã¨ differente cambialo
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > apksign.keystore

          # Percorso apk unsigned generato da Gradle
          unsigned_apk="app/build/outputs/apk/release/app-release-unsigned.apk"
          signed_apk="app/build/outputs/apk/release/OpenPipe-release-signed.apk"

          # Firma APK con apksigner
          $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
            --ks apksign.keystore \
            --ks-pass pass:$SIGNING_STORE_PASSWORD \
            --key-pass pass:$SIGNING_KEY_PASSWORD \
            --ks-key-alias $SIGNING_KEY_ALIAS \
            --out $signed_apk \
            $unsigned_apk

      - name: Verify signed APK
        env:
          ANDROID_HOME: /usr/local/lib/android/sdk
        run: |
          $ANDROID_HOME/build-tools/34.0.0/apksigner verify app/build/outputs/apk/release/OpenPipe-release-signed.apk

      - name: Create release and upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(grep versionName app/build.gradle | awk -F'"' '{print $2}')
          gh release create "v${version}" --title "${{ inputs.title }}" --notes-file ".github/changelog.md" --prerelease=${{ inputs.is_pre_release }} --repo manuel09/OpenPipe
          gh release upload "v${version}" app/build/outputs/apk/release/OpenPipe-release-signed.apk --repo manuel09/OpenPipe

      - name: Archive reports for job
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: '*/build/reports'
        if: ${{ always() }}
